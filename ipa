
// based on a keyboard map from an 'xkb/symbols/be' file
//
// $XKeyboardConfig$
// $XFree86: xc/programs/xkbcomp/symbols/be,v 1.6 2003/09/08 13:12:51 pascal Exp $

default
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="CentralEur";

    key <AE01>	{ [         1,     exclam,    0x100021b,    0x100021a ]	};
    key <AE02>	{ [         2,   quotedbl,    0x1000219,    0x1000218 ]	};
    key <AE03>	{ [         3,    section, 	  schwa               ]	};
    key <AE04>	{ [         4,     dollar,     EuroSign,        U20B4 ]	};
    key <AE05>	{ [         5,    percent,        U01C9,        U01C8 ]	};
    key <AE06>	{ [         6,  ampersand,        U01CB,        U01CC ]	};
    key <AE07>	{ [         7,      slash,    braceleft, seveneighths ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft,    trademark ]	};
    key <AE09>	{ [         9, parenright, bracketright,    plusminus ]	};
    key <AE10>	{ [         0,      equal,   braceright,       degree ]	};

    key <AE12>	{ [dead_acute, dead_grave,  dead_ogonek,   dead_caron ]	};

    key <AE11> {type[Group1]="FOUR_LEVEL_PLUS_LOCK",  symbols[Group1]=
                  [ssharp, question, backslash, U1E9E, 0x1001E9E ]};
// The unicode capital letter sharp s U1E9E is transformed to "SS"
// to match the rules for capitalizing sharp s in german.
// If the capital sharp s is needed, delete the line
// starting with <U1E9C> from /usr/share/X11/locale/iso8859-15/Compose.
// If both doubled S and capital sharp s are needed, use  0x1001E9E
// for capital sharp s and some free unicode codepoint like 0x1001E9C
// for doubled S. Don`t forget to change this in the Compose file, too.

    key <AD01>	{ [     U0294,      U02D0,        U02C8,     U02CC ]	};
    key <AD02>	{ [         w,      U028D,        U0270           ]	};
    key <AD03>	{ [         e,      U0259,        U025B,     U0258 ]	};
    key <AD04>	{ [     U0280,      U0281,            r,     U0279 ]	};
    key <AD05>	{ [         t,      U03B8,        U0288           ]	};
    key <AD06>	{ [         z,      U0292,        U0290,     U0291 ]	};
    key <AD07>	{ [         u,      U028A,        U0289           ]	};
    key <AD08>	{ [         i,      U026A,        U0268,     U026F ]	};
    key <AD09>	{ [         o,      U0254                        ]	};
    key <AD10>	{ [         p,      U0361,        U02B0,     U02B2 ]	};
    key <AD11>	{ [         y,      U028F,        U0265           ]    };
    key <AD12>	{ [      plus,   asterisk,   dead_tilde,  dead_macron ]	};

    key <AC01>	{ [         a,      U0251,        U0250,     U0252 ]	};
    key <AC02>  { [         s,      U0282,        U0283           ]	};
    key <AC03>	{ [         d,      U0257,        U0256,     U00F0 ]	};
    key <AC04>	{ [         f,      U0278                        ]	};
    key <AC05>	{ [         g,      U0260,        U0262,     U0263 ]	};
    key <AC06>	{ [         h,      U0266,        U0127,     U0267 ]	};
    key <AC07>  { [         j,      U029D,        U025F,     U0284 ]	};
    key <AC08>	{ [         k,          q                        ] };
    key <AC09>	{ [         l,      U026B,        U028E,     U026D ] };
    key <AC10>	{ [odiaeresis,      U00F8,        U0153,     U0276 ] };
    key <AC11>	{ [     U00E6,      U0251,        U028C,     U0252 ] };
    key <TLDE>	{ [dead_circumflex, degree,       U2032,     U2033 ] };

    key <BKSL>	{ [numbersign, apostrophe,        U22C5,     dead_breve ] };
    key <AB01>	{ [         y,      U028F,        U0265           ] };
    key <AB02>	{ [         x,      U03C7,        U00E7           ] };
    key <AB03>	{ [         c,      U00E7,        U0255           ] };
    key <AB04>	{ [         v,      U028B                        ] };
    key <AB05>	{ [         b,      U0253,        U0299,     U03B2 ] };
    key <AB06>	{ [         n,      U0272,        U014B,     U0273 ] };
    key <AB07>	{ [         m,      U0271                        ] };
    key <AB08>  { [     comma,  semicolon,       sacute,    Sacute ] };
    key <AB09>	{ [    period,      colon,       cacute,    Cacute ] };
    key <AB10>	{ [     minus, underscore,       zacute,    Zacute ] };

    key <RWIN> { [  Multi_key ] };


    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // modify the basic German layout to not have any dead keys

    include "de(basic)"
    name[Group1]="Germany - Eliminate dead keys";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AE12>	{ [     acute,      grave,      cedilla,      cedilla ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis,    diaeresis,    diaeresis ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,       macron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,  doubleacute,  doubleacute ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,  asciicircum,  asciicircum ]	};
    key <BKSL>	{ [numbersign, apostrophe,        grave,        grave ]	};
    key <AB10>	{ [     minus, underscore, dead_belowdot,    abovedot ]	};
};

partial alphanumeric_keys
xkb_symbols "deadgraveacute" {
    // modify the basic German layout to have only acute and grave
    // as dead keys (tilde and circumflex are needed as spacing characters
    // in many programming languages)

    include "de(basic)"
    name[Group1]="Germany - Dead grave acute";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,  dead_macron ]	};
    key <BKSL>	{ [numbersign, apostrophe,        grave,        grave ]	};
};

partial alphanumeric_keys
xkb_symbols "deadacute" {
    // modify the basic German layout to have only acute as
    // dead keys (ASCII grave, tilde and circumflex are needed as
    // spacing characters in many programming languages and text formatters)

    include "de(deadgraveacute)"

    name[Group1]="Germany - Dead acute";

    key <AE12>	{ [dead_acute,      grave, dead_cedilla,  dead_ogonek ]	};
    key <BKSL>	{ [numbersign, apostrophe,   dead_grave,   dead_grave ]	};
};

partial alphanumeric_keys
xkb_symbols "ro" {
    // add romanian-specific letters to the basic German layout.
    // Romanian symbols are accessible with combination of <AltGr> and
    // 'a', 's', 't', 'i', 'Ã¤ (&auml)' (+<Shift> for capital letters).
    // To view romanian-specific symbols, add "export LC_CTYPE=ro_RO"
    // or "export LC_CTYPE=de_DE.utf8" to your .profile.

    include "de(basic)"

    name[Group1]="Germany - Romanian keyboard with German letters";

    key <AD05> { [         t,    T,           tcedilla,     Tcedilla    ] };
    key <AD08> { [         i,    I,        icircumflex,  Icircumflex    ] };
    key <AC01> { [         a,    A,        aogonek,  Aogonek    ] };
    key <AC02> { [         s,    S,           scedilla,     Scedilla    ] };
    key <AC11> { [ adiaeresis,   Adiaeresis,    abreve,       Abreve    ] };
};

partial alphanumeric_keys
xkb_symbols "ro_nodeadkeys" {
    // add romanian-specific letters to the German nodeadkeys layout.
    // Read the comment for de_ro !

    include "de(nodeadkeys)"
    name[Group1]="Germany - Romanian keyboard with German letters, eliminate dead keys";

    key <AD05> { [         t,    T,           tcedilla,     Tcedilla    ] };
    key <AD08> { [         i,    I,        icircumflex,  Icircumflex    ] };
    key <AC01> { [         a,    A,        acircumflex,  Acircumflex    ] };
    key <AC02> { [         s,    S,           scedilla,     Scedilla    ] };
    key <AC11> { [ adiaeresis,   Adiaeresis, abreve,       Abreve       ] };
};
